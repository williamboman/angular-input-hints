/*
	angular-input-hinter v0.0.2
	https://github.com/williamboman/angular-input-hinter

	Copyright (c) 2014 William Boman <william@redwill.se>

	License: MIT (https://github.com/williamboman/angular-input-hinter/blob/master/LICENSE)
*/


!function(a){"use strict";a.module("wb.inputHinter",["wb.inputHinter.service","wb.inputHinter.directive"]),a.module("wb.inputHinter.directive",[]).directive("inputHinter",["inputHinter",function(b){return{restrict:"A",link:function(c,d,e){var f={waitBeforeDeleteMs:e.waitBeforeDeleteMs,waitInBetweenMs:e.waitInBetweenMs,writeSpeedMs:e.writeSpeedMs,deleteSpeedMs:e.deleteSpeedMs,delimiter:e.delimiter};a.forEach(f,function(a,b){"undefined"==typeof b&&delete f[a]});var g=new b(f);g.placeholders=e.inputHinter.split("|"),g.onTick=function(a){d.attr("placeholder",a)},g.init()}}}]),a.module("wb.inputHinter.service",[]).provider("inputHinter",function(){var b=this.config={waitBeforeDeleteMs:2e3,waitInBetweenMs:300,writeSpeedMs:100,deleteSpeedMs:60,delimiter:"|"};this.$get=["$timeout",function(c){function d(c){c=c||{},this.currentPlaceholderText="",this.currentPlaceholdersIndex=0,this.currentPlaceholderIndex=0,this.isDeleting=!1,this.timeout=void 0,this.config=a.copy(b),a.extend(this.config,c)}return d.prototype={init:function(){if(!this.placeholders)throw new TypeError("[wb.inputHinter] This instance of Ticker is missing Ticker.placeholders property.");if(this.userConfig&&a.extend(this.config,this.userConfig),!this.onTick||"function"!=typeof this.onTick)throw new TypeError("[wb.inputHinter] This instance of Ticker is missing a valid Ticker.onTick callback function.");this.tick()},stop:function(){c.cancel(this.timeout)},resume:function(){this.tick()},tick:function(){var a=this;return c.cancel(this.timeout),this.isDeleting?this.currentPlaceholderIndex--:this.currentPlaceholderIndex++,this.currentPlaceholderIndex>this.placeholders[this.currentPlaceholdersIndex].length?(this.isDeleting=!0,void(this.timeout=c(function(){a.tick()},this.getTickTime("beforeDeleting")))):this.currentPlaceholderIndex<0?(this.isDeleting=!1,this.currentPlaceholdersIndex++,this.currentPlaceholdersIndex>=this.placeholders.length&&(this.currentPlaceholdersIndex=0),void(this.timeout=c(function(){a.tick()},this.getTickTime("inBetween")))):(this.currentPlaceholderText=this.placeholders[this.currentPlaceholdersIndex].substr(0,this.currentPlaceholderIndex),this.onTick(this.currentPlaceholderText),void(this.timeout=c(function(){a.tick()},this.getTickTime(this.isDeleting?"deleting":"writing"))))},getTickTime:function(a){switch(a){case"writing":return this.config.writeSpeedMs-Math.random()*this.config.writeSpeedMs;case"deleting":return this.config.deleteSpeedMs-Math.random()*this.config.deleteSpeedMs;case"beforeDeleting":return this.config.waitBeforeDeleteMs;case"inBetween":return this.config.waitInBetweenMs;default:throw new ReferenceError("Trying to get a non-existent tick-time.")}}},d}]})}(window.angular);